{"version":3,"sources":["components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/logService.js","services/httpService.js","services/authService.js","components/customerTable.jsx","components/common/pagination.jsx","services/customerService.js","utils/paginate.js","components/searchBox.jsx","components/customers.jsx","components/RentalsTable.jsx","components/rentals.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","services/movieService.js","services/genreService.js","components/movieForm.jsx","components/profile.jsx","components/customerForm.jsx","components/notFound.jsx","components/common/listGroup.jsx","components/common/like.jsx","components/moviesTable.jsx","components/movies.jsx","components/navBar.jsx","services/userService.js","components/loginForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","components/registerForm.jsx","components/MovieDetail.jsx","App.js","serviceWorker.js","index.js"],"names":["TableHeader","raiseSort","path","sortColumn","Object","objectSpread","_this","props","order","onSort","renderSortIcon","column","react_default","a","createElement","className","_this2","this","columns","map","key","onClick","label","Component","TableBody","createKey","item","_id","content","_","get","_this$props","data","renderCell","Table","_ref","tableHeader","tableBody","logService","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","httpService","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","tokenKey","_callee","email","password","regenerator_default","wrap","_context","prev","next","http","sent","localStorage","setItem","stop","authService","login","_x","_x2","_login","apply","arguments","loginWithJwt","logout","removeItem","getCurrentUser","getItem","jwtDecode","ex","getJwt","CustomersTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","customer","Link","to","concat","name","deleteColumn","onDelete","user","auth","isAdmin","push","customers","table","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","customerUrl","id","getCustomer","customerId","saveCustomer","body","paginate","items","pageNumber","startIndex","slice","take","value","SearchBox","onChange","type","placeholder","e","currentTarget","Customers","state","searchQuery","loading","handleDelete","originalCustomers","filter","m","setState","t0","handlePageChange","handleSearch","query","handleSort","getPagedData","_this$state","allCustomers","filtered","toLowerCase","startsWith","orderBy","totalCount","length","_this$state2","_this$getPagedData","style","marginBottom","searchBox","customerTable","pagination","class","role","RentalsTable","rent","rents","Rentals","rentDate","todayDate","allrents","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","components_RentalsTable","Input","_ref$disabled","disabled","rest","objectWithoutProperties","htmlFor","assign","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","validateProperty","obj","defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","errorMessage","common_select","common_input","movieUrl","getMovie","movieId","saveMovie","movie","getGenres","MovieForm","title","genreId","numberInStock","dailyRentalRate","genres","string","required","number","min","max","history","match","params","mapToViewModel","_context3","replace","populateGenres","populateMovie","genre","onSubmit","renderInput","renderSelect","renderButton","Profile","data-src","alt","CustomerForm","phone","_context2","populateCustomers","NotFound","ListGroup","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","Like","classes","liked","aria-hidden","cursor","MoviesTable","like","onLike","editColumn","movies","Movies","selectedGenre","originalMovies","handleLike","toConsumableArray","index","indexOf","handleGenreSelect","allMovies","listGroup","moviesTable","NavBar","NavLink","Fragment","LoginForm","username","location","window","from","pathname","Logout","ProtectedRoute","component","render","Route","Redirect","RegisterForm","users","success","position","POSITION","BOTTOM_RIGHT","user_role","boolean","MovieDetail","width","src","faker","internet","avatar","App","lib","navBar","Switch","protectedRoute","components_movies","components_customers","profile","exact","Boolean","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c78e33f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass TableHeader extends Component {\r\n    \r\n    raiseSort = path => {\r\n        const sortColumn = {...this.props.sortColumn};\r\n        if(sortColumn.path === path)\r\n            sortColumn.order = sortColumn.order = 'asc' ? 'desc' : 'asc';\r\n        else {\r\n            sortColumn.path = path;\r\n            sortColumn.order = 'asc';\r\n        }\r\n        this.props.onSort(sortColumn);\r\n    }\r\n    \r\n    renderSortIcon = column => {\r\n        const {sortColumn} = this.props;\r\n        if(column.path !== sortColumn.path) return null;\r\n        if(sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"/>;\r\n        return <i className=\"fa fa-sort-desc\"/>;\r\n    }\r\n\r\n    render() { \r\n        return (  \r\n            <thead>\r\n                <tr>\r\n                    {this.props.columns.map( column => (\r\n                        <th className=\"clickable\" key={column.path || column.key} onClick={ () => this.raiseSort(column.path)}>\r\n                        {column.label} {this.renderSortIcon(column)}\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TableHeader;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nclass TableBody extends Component {\r\n    renderCell(item, column){\r\n        if(column.content) return column.content(item);\r\n        return _.get(item, column.path);\r\n    }\r\n\r\n    createKey = (item, column) => {\r\n        return column._id + (column.path || column.key);\r\n    }\r\n\r\n    render() { \r\n        const {data, columns} = this.props;\r\n        return ( \r\n            <tbody>\r\n                {data.map(item => \r\n                     <tr key={item._id}>\r\n                     {columns.map(column => <td key={this.createKey(item, column)}>\r\n                            {this.renderCell(item, column)}\r\n                     </td>)}\r\n                 </tr>\r\n                )}\r\n            </tbody>\r\n         );\r\n    }\r\n}\r\n \r\nexport default TableBody;","import React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\nconst Table = ( {columns, onSort, data, sortColumn}) => {\r\n    return ( \r\n        <table className=\"table table-bordered\">\r\n                <TableHeader columns={columns} onSort={onSort} sortColumn={sortColumn}/>\r\n                <TableBody data={data} columns={columns} />\r\n            </table> \r\n     );\r\n}\r\n \r\nexport default Table;","// For simplicity, I changed the implementation of this module\r\n// and removed Raven. We can always add that in the future\r\n// and this module is the only module we need to modify.\r\n\r\nfunction init() {\r\n}\r\n\r\nfunction log(error) {\r\n    console.error(error);\r\n}\r\n\r\nexport default {\r\n    init,\r\n    log\r\n};\r\n","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\nimport auth from  './authService';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\n//axios.defaults.headers.common[\"x-auth-token\"] = auth.getJwt();\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occurrred.\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport function setJwt(jwt) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    setJwt\r\n};","import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\n//import { apiUrl } from \"../config.json\";\r\n\r\n//const apiEndpoint = apiUrl + \"/auth\";\r\nconst apiEndpoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\n//http.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n    const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    try {\r\n        const jwt = localStorage.getItem(tokenKey);\r\n        return jwtDecode(jwt);\r\n    } catch (ex) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getJwt() {\r\n    return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n    login,\r\n    loginWithJwt,\r\n    logout,\r\n    getCurrentUser,\r\n    getJwt\r\n};\r\n","import React, {Component} from 'react';\r\nimport Table from './common/table';\r\nimport {Link} from 'react-router-dom';\r\nimport auth from '../services/authService';\r\n\r\nclass CustomersTable extends Component {\r\n\r\n    columns = [\r\n        {\r\n            path: 'name',\r\n            label: 'Name',\r\n            content: customer => <Link to={`/customers/${customer._id}`}>{customer.name} </Link>\r\n        },\r\n        {path: 'phone', label: 'Phone'},\r\n        {path: 'isGold', label: 'Gold Customer'},\r\n    ];\r\n\r\n    deleteColumn = {\r\n        key: 'delete',\r\n        content: customer => <button onClick={() => this.props.onDelete(customer)}\r\n                                  className=\"btn btn-danger btn-sm\">Delete</button>\r\n    };\r\n\r\n    constructor(){\r\n        super();\r\n        const user = auth.getCurrentUser();\r\n        if(user && user.isAdmin){\r\n            this.columns.push(this.deleteColumn);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {customers, onSort, sortColumn} = this.props;\r\n\r\n        return (\r\n            <Table\r\n                columns={this.columns}\r\n                data={customers}\r\n                onSort={onSort}\r\n                sortColumn={sortColumn}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomersTable;","import React from 'react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Pagination = (props) => {\r\n    const {itemsCount, pageSize, currentPage, onPageChange} = props;\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    if(pagesCount === 1) return null;\r\n    const pages = _.range(1, pagesCount+1);\r\n    console.log(currentPage);\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pages.map(page => (\r\n                    <li key={page}className={page === currentPage ? \"page-item active\" : \"page-item\"}>\r\n                    <a className=\"page-link\" onClick={() => onPageChange(page)} >{page}</a>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nPagination.propTypes = {\r\n    itemsCount : PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired\r\n}\r\nexport default Pagination;","import http from \"./httpService\";\r\n//import {apiUrl} from \"../config.json\";\r\n\r\nconst apiEndpoint =  \"/customers\";\r\n\r\nfunction customerUrl(id) {\r\n    return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getCustomers() {\r\n    return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getCustomer(customerId) {\r\n    return http.get(customerUrl(customerId));\r\n}\r\n\r\nexport function saveCustomer(customer) {\r\n    if (customer._id) {\r\n        const body = {...customer};\r\n        delete body._id;\r\n        return http.put(customerUrl(customer._id), body);\r\n    }\r\n\r\n    return http.post(apiEndpoint, customer);\r\n}\r\n\r\nexport function deleteCustomer(customerId) {\r\n    return http.delete(customerUrl(customerId));\r\n}\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber-1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CustomersTable from \"./customerTable\";\r\nimport {toast} from \"react-toastify\";\r\nimport Pagination from \"./common/pagination\";\r\nimport {getCustomers, deleteCustomer} from \"../services/customerService\";\r\nimport {paginate} from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport SearchBox from \"./searchBox\";\r\n\r\nclass Customers extends Component {\r\n    state = {\r\n        customers: [],\r\n        currentPage: 1,\r\n        pageSize: 8,\r\n        searchQuery: \"\",\r\n        sortColumn: {path: \"name\", order: \"asc\"},\r\n        loading: false\r\n    };\r\n\r\n    async componentDidMount() {\r\n        this.setState({loading: true})\r\n        const {data: customers} = await getCustomers();\r\n        console.log(customers);\r\n        this.setState({customers, loading: false});\r\n    }\r\n\r\n    handleDelete = async customer => {\r\n        const originalCustomers = this.state.customers;\r\n        const customers = originalCustomers.filter(m => m._id !== customer._id);\r\n        this.setState({customers});\r\n\r\n        try {\r\n            await deleteCustomer(customer._id);\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 404)\r\n                toast.error('This customer has been already deleted.')\r\n            this.setState({customers: originalCustomers});\r\n        }\r\n\r\n\r\n    };\r\n\r\n    handlePageChange = page => {\r\n        this.setState({currentPage: page});\r\n    };\r\n\r\n    handleSearch = query => {\r\n        this.setState({searchQuery: query});\r\n    };\r\n\r\n    handleSort = sortColumn => {\r\n        this.setState({sortColumn});\r\n    };\r\n\r\n    getPagedData = () => {\r\n        const {\r\n            pageSize,\r\n            currentPage,\r\n            sortColumn,\r\n            searchQuery,\r\n            customers: allCustomers\r\n        } = this.state;\r\n\r\n        let filtered = allCustomers;\r\n        if (searchQuery)\r\n            filtered = allCustomers.filter(m =>\r\n                m.name.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n            );\r\n    \r\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n        const customers = paginate(sorted, currentPage, pageSize);\r\n\r\n        return {totalCount: filtered.length, data: customers};\r\n    };\r\n\r\n    render() {\r\n        const {length: count} = this.state.customers;\r\n        const {pageSize, currentPage, sortColumn, searchQuery} = this.state;\r\n        const {user} = this.props;\r\n\r\n        //if (count === 0) return <p>There are no movies in the database.</p>;\r\n\r\n        const {totalCount, data: customers} = this.getPagedData();\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    {(<Link\r\n                        to=\"/customers/new\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{marginBottom: 20}}\r\n                    >\r\n                        New Customer\r\n                    </Link>)}\r\n                    <p>Showing {totalCount} customers in the database.</p>\r\n                    <SearchBox value={searchQuery} onChange={this.handleSearch}/>\r\n                    <CustomersTable\r\n                        customers={customers}\r\n                        sortColumn={sortColumn}\r\n                        onDelete={this.handleDelete}\r\n                        onSort={this.handleSort}\r\n                    />\r\n                    <Pagination\r\n                        itemsCount={totalCount}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        onPageChange={this.handlePageChange}\r\n                    />\r\n                     {this.state.loading && (\r\n                        <div class=\"spinner-grow text-dark\" role=\"status\">\r\n                            <span class=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Customers;\r\n","import React, {Component} from 'react';\r\nimport Table from './common/table';\r\nimport {Link} from 'react-router-dom';\r\nimport auth from '../services/authService';\r\n\r\nclass RentalsTable extends Component {\r\n\r\n    columns = [\r\n        {\r\n            path: 'name',\r\n            label: 'Movie Name'\r\n        },\r\n        {path: 'customer', label: 'Customer Name'},\r\n        {path: 'rentDate', label: 'Rent Date'},\r\n    ];\r\n\r\n    deleteColumn = {\r\n        key: 'delete',\r\n        content: rent => <button onClick={() => this.props.onDelete(rent)}\r\n                                  className=\"btn btn-danger btn-sm\">Delete</button>\r\n    };\r\n\r\n    constructor(){\r\n        super();\r\n        const user = auth.getCurrentUser();\r\n        if(user && user.isAdmin){\r\n            this.columns.push(this.deleteColumn);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {rents, onSort, sortColumn} = this.props;\r\n        console.log(\"rents: \",rents)\r\n\r\n        return (\r\n            <Table\r\n                columns={this.columns}\r\n                data={rents}\r\n                onSort={onSort}\r\n                sortColumn={sortColumn}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default RentalsTable;","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport RentalsTable from \"./RentalsTable\";\r\nimport {toast} from \"react-toastify\";\r\nimport Pagination from \"./common/pagination\";\r\nimport {paginate} from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport SearchBox from \"./searchBox\";\r\n\r\nclass Rentals extends Component {\r\n    state = {\r\n        rents: [\r\n            {\r\n                _id: '1',\r\n                name: 'Troy',\r\n                customer: 'James',\r\n                rentDate: this.todayDate()\r\n            },\r\n            {\r\n                _id: '2',\r\n                name: 'Amar Akash',\r\n                customer: 'HIru Kasda',\r\n                rentDate: this.todayDate()\r\n            },\r\n            {\r\n                _id: '3',\r\n                name: 'Janura',\r\n                customer: 'Kagsi',\r\n                rentDate: this.todayDate()\r\n            },\r\n            {\r\n                _id: '4',\r\n                name: 'Prane Huds',\r\n                customer: 'Konika Rims',\r\n                rentDate: this.todayDate()\r\n            },\r\n            {\r\n                _id: '5',\r\n                name: 'Does',\r\n                customer: 'Jemmmy',\r\n                rentDate: this.todayDate()\r\n            },\r\n            {\r\n                _id: '6',\r\n                name: 'Good Days',\r\n                customer: 'Stan Baker',\r\n                rentDate: this.todayDate()\r\n            },\r\n            {\r\n                _id: '7',\r\n                name: 'Kobra',\r\n                customer: 'Denis Riche',\r\n                rentDate: this.todayDate()\r\n            },\r\n            {\r\n                _id: '8',\r\n                name: 'Black Panther',\r\n                customer: 'Bishial Bois',\r\n                rentDate: this.todayDate()\r\n            },\r\n            {\r\n                _id: '9',\r\n                name: 'End Gsam',\r\n                customer: 'Stephen Hig',\r\n                rentDate: this.todayDate()\r\n            },\r\n            {\r\n                _id: '10',\r\n                name: 'KIll Mission',\r\n                customer: 'Riders',\r\n                rentDate: this.todayDate()\r\n            }\r\n        ],\r\n        currentPage: 1,\r\n        pageSize: 8,\r\n        searchQuery: \"\",\r\n        sortColumn: {path: \"name\", order: \"asc\"}\r\n    };\r\n\r\n    todayDate(){\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = today.getFullYear();\r\n\r\n        today = mm + '/' + dd + '/' + yyyy;\r\n        return today;\r\n    }\r\n\r\n    //  componentDidMount() {\r\n    //     const {data: rents} = rentList;\r\n    //     console.log(rents);\r\n    //     this.setState({rents});\r\n    // }\r\n\r\n    // handleDelete = async customer => {\r\n    //     const originalrents = this.state.rents;\r\n    //     const rents = originalrents.filter(m => m._id !== customer._id);\r\n    //     this.setState({rents});\r\n\r\n    //     try {\r\n    //         await deleteCustomer(customer._id);\r\n    //     } catch (ex) {\r\n    //         if (ex.response && ex.response.status === 404)\r\n    //             toast.error('This customer has been already deleted.')\r\n    //         this.setState({rents: originalrents});\r\n    //     }\r\n\r\n\r\n    // };\r\n\r\n    handlePageChange = page => {\r\n        this.setState({currentPage: page});\r\n    };\r\n\r\n    handleSearch = query => {\r\n        this.setState({searchQuery: query});\r\n    };\r\n\r\n    handleSort = sortColumn => {\r\n        this.setState({sortColumn});\r\n    };\r\n\r\n    getPagedData = () => {\r\n        const {\r\n            pageSize,\r\n            currentPage,\r\n            sortColumn,\r\n            searchQuery,\r\n            rents: allrents\r\n        } = this.state;\r\n\r\n        let filtered = allrents;\r\n        if (searchQuery)\r\n            filtered = allrents.filter(m =>\r\n                m.name.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n            );\r\n    \r\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n        const rents = paginate(sorted, currentPage, pageSize);\r\n\r\n        return {totalCount: filtered.length, data: rents};\r\n    };\r\n\r\n    render() {\r\n        const {length: count} = this.state.rents;\r\n        const {pageSize, currentPage, sortColumn, searchQuery} = this.state;\r\n        const {user} = this.props;\r\n\r\n        //if (count === 0) return <p>There are no movies in the database.</p>;\r\n\r\n        const {totalCount, data: rents} = this.getPagedData();\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    {user &&(<Link\r\n                        to=\"/rents/new\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{marginBottom: 20}}\r\n                    >\r\n                        New Rent\r\n                    </Link>)}\r\n                    <p>Showing {totalCount} rents in the database.</p>\r\n                    <SearchBox value={searchQuery} onChange={this.handleSearch}/>\r\n                    <RentalsTable\r\n                        rents={rents}\r\n                        sortColumn={sortColumn}\r\n                        onDelete={this.handleDelete}\r\n                        onSort={this.handleSort}\r\n                    />\r\n                    <Pagination\r\n                        itemsCount={totalCount}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        onPageChange={this.handlePageChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rentals;\r\n","\r\nimport React from 'react';\r\nconst Input = ({name, label, error,disabled=false, ...rest}) => {\r\n    return (  \r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input {...rest}\r\n                name={name}\r\n                className=\"form-control\" \r\n                id={name} \r\n                disabled={disabled ? 'disabled': ''}\r\n                placeholder=\"\"/>\r\n               { error &&  <div  className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n \r\nexport default Input;","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, disabled=false, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\" disabled={disabled}>\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options, disabled=false) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        disabled={disabled}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\", disabled=false) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        disabled={disabled}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import http from \"./httpService\";\r\n//import {apiUrl} from \"../config.json\";\r\n\r\nconst apiEndpoint =  \"/movies\";\r\n\r\nfunction movieUrl(id) {\r\n    return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n    return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n    return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n    if (movie._id) {\r\n        const body = {...movie};\r\n        delete body._id;\r\n        return http.put(movieUrl(movie._id), body);\r\n    }\r\n\r\n    return http.post(apiEndpoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n    return http.delete(movieUrl(movieId));\r\n}\r\n","import http from \"./httpService\";\r\n//import { apiUrl } from \"../config.json\";\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport {getMovie, saveMovie} from \"../services/movieService\";\r\nimport {getGenres} from \"../services/genreService\";\r\n\r\nclass MovieForm extends Form {\r\n    state = {\r\n        data: {\r\n            title: \"\",\r\n            genreId: \"\",\r\n            numberInStock: \"\",\r\n            dailyRentalRate: \"\"\r\n        },\r\n        genres: [],\r\n        errors: {},\r\n        loading: false\r\n    };\r\n\r\n    schema = {\r\n        _id: Joi.string(),\r\n        title: Joi.string()\r\n            .required()\r\n            .label(\"Title\"),\r\n        genreId: Joi.string()\r\n            .required()\r\n            .label(\"Genre\"),\r\n        numberInStock: Joi.number()\r\n            .required()\r\n            .min(0)\r\n            .max(100)\r\n            .label(\"Number in Stock\"),\r\n        dailyRentalRate: Joi.number()\r\n            .required()\r\n            .min(0)\r\n            .max(10)\r\n            .label(\"Daily Rental Rate\")\r\n    };\r\n\r\n    async populateGenres() {\r\n        const {data: genres} = await  getGenres();\r\n        this.setState({genres});\r\n    }\r\n\r\n    async populateMovie() {\r\n        try {\r\n            const movieId = this.props.match.params.id;\r\n           \r\n            if (movieId === \"new\") {\r\n                this.setState({loading: false});\r\n                return;\r\n            }\r\n            this.setState({loading: true})\r\n            const {data: movie} = await getMovie(movieId);\r\n            this.setState({data: this.mapToViewModel(movie), loading: false});\r\n        }\r\n        catch (ex) {\r\n            if (ex.response && ex.response.status === 404)\r\n                this.props.history.replace(\"/not-found\");\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await  this.populateGenres();\r\n        await  this.populateMovie();\r\n    }\r\n\r\n    mapToViewModel(movie) {\r\n        return {\r\n            _id: movie._id,\r\n            title: movie.title,\r\n            genreId: movie.genre._id,\r\n            numberInStock: movie.numberInStock,\r\n            dailyRentalRate: movie.dailyRentalRate\r\n        };\r\n    }\r\n\r\n    doSubmit = async () => {\r\n        this.setState({loading: true})\r\n        await saveMovie(this.state.data);\r\n\r\n        this.props.history.push(\"/movies\");\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Movie Form</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"title\", \"Title\")}\r\n                    {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n                    {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n                    {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n                    {this.renderButton(\"Save\")}\r\n                </form>\r\n                {this.state.loading && (\r\n                    <div class=\"spinner-grow text-dark\" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React, { Component } from 'react';\r\n\r\nclass Profile extends Component {\r\n\r\n    render() { \r\n        const {user} = this.props;\r\n        return (  \r\n            <div className=\"my-6 p-6 bg-white rounded shadow-sm\">\r\n                <h6 className=\"border-bottom border-gray pb-2 mb-0\">My profile</h6>\r\n                <div className=\"media text-muted pt-3\">\r\n                    <img data-src=\"holder.js/32x32?theme=thumb&bg=007bff&fg=007bff&size=1\" alt=\"\" className=\"mr-2 rounded\"/>\r\n                    <p className=\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\">\r\n                        <strong className=\"d-block text-gray-dark\">Name :{user.name}</strong>\r\n                    </p>\r\n                </div>\r\n                <div className=\"media text-muted pt-3\">\r\n                    <img data-src=\"holder.js/32x32?theme=thumb&bg=007bff&fg=007bff&size=1\" alt=\"\" className=\"mr-2 rounded\"/>\r\n                    <p className=\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\">\r\n                        <strong className=\"d-block text-gray-dark\">Email : {user.email}</strong>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n      );\r\n    }\r\n}\r\n \r\nexport default Profile;","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport {getCustomer, saveCustomer} from \"../services/customerService\";\r\n\r\nclass CustomerForm extends Form {\r\n    state = {\r\n        data: {\r\n            name: \"\",\r\n            phone: \"\"\r\n        },\r\n        errors: {}, loading: false\r\n    };\r\n\r\n    schema = {\r\n        _id: Joi.string(),\r\n        name: Joi.string()\r\n            .required()\r\n            .label(\"Name\"),\r\n        phone: Joi.string()\r\n            .required()\r\n            .label(\"Phone\")\r\n    };\r\n\r\n    async populateCustomers() {\r\n        try {\r\n            const customerId = this.props.match.params.id;\r\n            if (customerId === \"new\") return;\r\n            \r\n            this.setState({loading:true})\r\n            const {data: customer} = await getCustomer(customerId);\r\n            this.setState({data: this.mapToViewModel(customer), loading: false});\r\n        }\r\n        catch (ex) {\r\n            if (ex.response && ex.response.status === 404)\r\n                this.props.history.replace(\"/not-found\");\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n       \r\n        await  this.populateCustomers();\r\n    }\r\n\r\n    mapToViewModel(customer) {\r\n        return {\r\n            _id: customer._id,\r\n            name: customer.name,\r\n            phone: customer.phone\r\n        \r\n        };\r\n    }\r\n\r\n    doSubmit = async () => {\r\n        this.setState({loading:true})\r\n        await saveCustomer(this.state.data);\r\n\r\n        this.props.history.push(\"/customers\");\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Customer Form</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"name\", \"Name\")}\r\n                    {this.renderInput(\"phone\", \"Phone\", \"number\")}\r\n                    {this.renderButton(\"Save\")}\r\n                </form>\r\n                {this.state.loading && (\r\n                    <div class=\"spinner-grow text-dark\" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomerForm;\r\n","import React from 'react';\r\nconst NotFound = () => {\r\n    return ( <h1> Not Found</h1>);\r\n}\r\n \r\nexport default NotFound;","import React from 'react'\r\n\r\nconst ListGroup = (props) => {\r\n    const { items, textProperty, valueProperty, onItemSelect, selectedItem} = props;\r\n    return <ul className=\"list-group\">\r\n            { items.map( item => (<li \r\n                key={item[valueProperty]}\r\n\r\n                onClick={() => onItemSelect(item)} \r\n                className={item === selectedItem ? \"list-group-item active\" : \"list-group-item \"}> \r\n                {item[textProperty]}\r\n            </li>)) }\r\n           </ul>;\r\n}\r\n \r\nListGroup.defaultProps = {\r\n    textProperty : 'name',\r\n    valueProperty : '_id'\r\n}\r\n\r\nexport default ListGroup;","import React, { Component } from 'react';\r\nimport ListGroup from './listGroup';\r\nclass Like extends Component {\r\n\r\n    render() { \r\n        let classes = 'fa fa-heart';\r\n        if(!this.props.liked) classes += '-o';\r\n        return (\r\n             <i \r\n              className={classes}\r\n              onClick={this.props.onClick}\r\n              aria-hidden=\"true\"\r\n              style={{cursor : 'pointer'}}\r\n              >\r\n              </i> \r\n            );\r\n    }\r\n}\r\n \r\nexport default Like;","import React, {Component} from 'react';\r\nimport Like from './common/like';\r\nimport Table from './common/table';\r\nimport {Link} from 'react-router-dom';\r\nimport auth from '../services/authService';\r\n\r\nclass MoviesTable extends Component {\r\n\r\n    columns = [\r\n        {\r\n            path: 'title',\r\n            label: 'Title',\r\n            content: movie => <Link to={`/movie-detail/${movie._id}`}>{movie.title} </Link>\r\n        },\r\n        {path: 'genre.name', label: 'Genre'},\r\n        {path: 'numberInStock', label: 'Stock'},\r\n        {path: 'dailyRentalRate', label: 'Rate'},\r\n        {key: 'like', content: movie => <Like liked={movie.liked} onClick={() => this.props.onLike(movie)}/>},\r\n    ];\r\n\r\n    editColumn = {\r\n        key: 'edit',\r\n        content: movie => <Link to={`/movies/${movie._id}`} className=\"btn btn-primary btn-sm\">Update</Link>\r\n    };\r\n\r\n    deleteColumn = {\r\n        key: 'delete',\r\n        content: movie => <button onClick={() => this.props.onDelete(movie)}\r\n                                  className=\"btn btn-danger btn-sm\">Delete</button>\r\n    };\r\n\r\n    constructor(){\r\n        super();\r\n        const user = auth.getCurrentUser();\r\n        this.columns.push(this.editColumn);\r\n        if(user && user.isAdmin){\r\n            \r\n            this.columns.push(this.deleteColumn);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {movies, onSort, sortColumn} = this.props;\r\n\r\n        return (\r\n            <Table\r\n                columns={this.columns}\r\n                data={movies}\r\n                onSort={onSort}\r\n                sortColumn={sortColumn}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default MoviesTable;","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport {toast} from \"react-toastify\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport Pagination from \"./common/pagination\";\r\nimport {getMovies, deleteMovie} from \"../services/movieService\";\r\nimport {getGenres} from \"../services/genreService\";\r\nimport {paginate} from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport SearchBox from \"./searchBox\";\r\n\r\nclass Movies extends Component {\r\n    state = {\r\n        movies: [],\r\n        genres: [],\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        searchQuery: \"\",\r\n        selectedGenre:null,\r\n        sortColumn: {path: \"title\", order: \"asc\"},\r\n        loading: false\r\n    };\r\n\r\n    async componentDidMount() {\r\n\r\n        this.setState({loading: true})\r\n        console.log(this.state)\r\n        const {data} = await getGenres();\r\n        const genres = [{_id: \"\", name: \"All Genres\"}, ...data];\r\n\r\n        const {data: movies} = await getMovies();\r\n        this.setState({movies, genres, loading: false});\r\n    }\r\n\r\n    handleDelete = async movie => {\r\n        const originalMovies = this.state.movies;\r\n        const movies = originalMovies.filter(m => m._id !== movie._id);\r\n        this.setState({movies});\r\n\r\n        try {\r\n            await deleteMovie(movie._id);\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 404)\r\n                toast.error('This movie has been already deleted.')\r\n            this.setState({movies: originalMovies});\r\n        }\r\n\r\n\r\n    };\r\n\r\n    handleLike = movie => {\r\n        const movies = [...this.state.movies];\r\n        const index = movies.indexOf(movie);\r\n        movies[index] = {...movies[index]};\r\n        movies[index].liked = !movies[index].liked;\r\n        this.setState({movies});\r\n    };\r\n\r\n    handlePageChange = page => {\r\n        this.setState({currentPage: page});\r\n    };\r\n\r\n    handleGenreSelect = genre => {\r\n        this.setState({selectedGenre: genre, searchQuery: \"\", currentPage: 1});\r\n    };\r\n\r\n    handleSearch = query => {\r\n        this.setState({searchQuery: query, selectedGenre: null, currentPage: 1});\r\n    };\r\n\r\n    handleSort = sortColumn => {\r\n        this.setState({sortColumn});\r\n    };\r\n\r\n    getPagedData = () => {\r\n        const {\r\n            pageSize,\r\n            currentPage,\r\n            sortColumn,\r\n            selectedGenre,\r\n            searchQuery,\r\n            movies: allMovies\r\n        } = this.state;\r\n\r\n        let filtered = allMovies;\r\n        if (searchQuery)\r\n            filtered = allMovies.filter(m =>\r\n                m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n            );\r\n        else if (selectedGenre && selectedGenre._id)\r\n            filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n        const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n        return {totalCount: filtered.length, data: movies};\r\n    };\r\n\r\n    render() {\r\n        console.log(this.state)\r\n        const {length: count} = this.state.movies;\r\n        const {pageSize, currentPage, sortColumn, searchQuery} = this.state;\r\n        const {user} = this.props;\r\n\r\n        //if (count === 0) return <p>There are no movies in the database.</p>;\r\n\r\n        const {totalCount, data: movies} = this.getPagedData();\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ListGroup\r\n                        items={this.state.genres}\r\n                        selectedItem={this.state.selectedGenre}\r\n                        onItemSelect={this.handleGenreSelect}\r\n                    />\r\n                </div>\r\n                <div className=\"col\">\r\n                    {(<Link\r\n                        to=\"/movies/new\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{marginBottom: 20}}\r\n                    >\r\n                        New Movie\r\n                    </Link>)}\r\n                    <p>Showing {totalCount} movies in the database.</p>\r\n                   \r\n                    \r\n                    <SearchBox value={searchQuery} onChange={this.handleSearch}/>\r\n                    <MoviesTable\r\n                        movies={movies}\r\n                        sortColumn={sortColumn}\r\n                        onLike={this.handleLike}\r\n                        onDelete={this.handleDelete}\r\n                        onSort={this.handleSort}\r\n                    />\r\n                    <Pagination\r\n                        itemsCount={totalCount}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        onPageChange={this.handlePageChange}\r\n                    />\r\n                    {this.state.loading && (\r\n                        <div class=\"spinner-grow text-dark\" role=\"status\">\r\n                            <span class=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    )}\r\n                      \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movies;\r\n","import React from 'react';\r\nimport {NavLink, Link} from 'react-router-dom';\r\n\r\nconst NavBar = ({user}) => {\r\n    return ( \r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <Link className=\"navbar-brand\" to=\"/\">RentMovie</Link>\r\n            \r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/movies\">Movies</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/rentals\">Rentals</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/customers\">Customers</NavLink>\r\n                    </li>\r\n                    \r\n                </ul>\r\n                <form class=\"form-inline my-2 my-lg-0\">\r\n                    { !user &&(\r\n                            <React.Fragment>\r\n                                <NavLink className=\"btn btn-outline-primary mx-2 my-sm-0\" to=\"/login\">Login</NavLink>\r\n                                <NavLink className=\"btn btn-outline-primary mx-2 my-sm-0\" to=\"/register\">Register</NavLink>\r\n                            </React.Fragment>\r\n                            )\r\n                        }\r\n                        { user &&(\r\n                            <React.Fragment>\r\n                                    <NavLink className=\"nav-link\" to=\"/profile\">{user.name}</NavLink>\r\n                                    <NavLink className=\"btn btn-outline-danger mx-2 my-sm-0\" to=\"/logout\">Logout</NavLink>\r\n                            </React.Fragment>\r\n                        )\r\n                        }\r\n                </form>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default NavBar;","import http from \"./httpService\";\r\n//import {apiUrl} from \"../config.json\";\r\n\r\nconst apiEndpoint = \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndpoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name,\r\n    isAdmin: user.isAdmin\r\n  });\r\n}\r\n","import React, {Component} from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport auth from '../services/authService';\r\nimport * as userService from \"../services/userService\";\r\n\r\nclass LoginForm extends Form {\r\n\r\n    state = {\r\n        data: {username: \"\", password: \"\"},\r\n        errors: {}, loading: false\r\n    };\r\n\r\n    schema = {\r\n        username: Joi.string()\r\n            .required()\r\n            .label(\"Username\"),\r\n        password: Joi.string()\r\n            .required()\r\n            .label(\"Password\")\r\n    };\r\n\r\n    doSubmit = async () => {\r\n        try {\r\n            this.setState({loading: true})\r\n            const {data} = this.state;\r\n            await auth.login(data.username, data.password);\r\n            const {state} = this.props.location;\r\n            this.setState({loading: false})\r\n            window.location = state ? state.from.pathname : '/';\r\n        } catch (ex) {\r\n            this.setState({loading: false})\r\n            if (ex.response && ex.response.status === 400) {\r\n                const errors = {...this.state.errors};\r\n                errors.username = ex.response.data;\r\n                this.setState({errors});\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput('username', 'Username')}\r\n                    {this.renderInput('password', 'Password', 'password')}\r\n                    {this.renderButton('Login')}\r\n                </form>\r\n                {this.state.loading && (\r\n                    <div class=\"spinner-grow text-dark\" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React, {Component} from 'react';\r\nimport auth from '../services/authService'\r\n\r\nclass Logout extends Component {\r\n    componentDidMount(){\r\n        auth.logout();\r\n        window.location = '/';\r\n    }\r\n    render(){\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Logout;","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport auth from '../../services/authService';\r\n\r\nconst ProtectedRoute = ({path, component:Component, render, ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                if (!auth.getCurrentUser()) return <Redirect to={{\r\n                    pathname : '/login',\r\n                    state : {from : props.location}\r\n                }\r\n                }/>;\r\n                return Component ? <Component {...props} /> : render(props);\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ProtectedRoute;","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport * as userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\", isAdmin: false },\r\n    users: [],\r\n    errors: {}, loading: false\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      this.setState({loading: true});\r\n      console.log(this.state.data);\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      this.props.history.push(\"/login\");\r\n      toast.success('Registration Successful. You can log in now.', {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        className: 'foo-bar'\r\n      });\r\n    } catch (ex) {\r\n      this.setState({loading: false})\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors, loading: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  user_role = [ { _id: false, name: \"User\" }];\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(5)\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .required()\r\n      .label(\"Name\"),\r\n    isAdmin: Joi.boolean().label(\"Admin\")\r\n  };\r\n\r\n  componentDidMount() {\r\n    const users = this.user_role;\r\n    this.setState({ users });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n        {this.state.loading && (\r\n              <div class=\"spinner-grow text-dark\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n              </div>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, {Component} from \"react\";\r\nimport {getMovie} from \"../services/movieService\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport {getGenres} from \"../services/genreService\";\r\nimport faker from 'faker';\r\n\r\nclass MovieDetail extends Form {\r\n    state = {\r\n        data: {\r\n            title: \"\",\r\n            genreId: \"\",\r\n            numberInStock: \"\",\r\n            dailyRentalRate: \"\"\r\n        },\r\n        genres: [],\r\n        errors: {},\r\n        loading: false\r\n    };\r\n\r\n   \r\n    async populateGenres() {\r\n        const {data: genres} = await  getGenres();\r\n        this.setState({genres});\r\n    }\r\n\r\n    async populateMovie() {\r\n        try {\r\n            const movieId = this.props.match.params.id;\r\n            const {data: movie} = await getMovie(movieId);\r\n            this.setState({data: this.mapToViewModel(movie), loading: false});\r\n        }\r\n        catch (ex) {\r\n            if (ex.response && ex.response.status === 404)\r\n                this.props.history.replace(\"/not-found\");\r\n        }\r\n    }\r\n\r\n    schema = {\r\n        _id: Joi.string(),\r\n        title: Joi.string()\r\n            .required()\r\n            .label(\"Title\"),\r\n        genreId: Joi.string()\r\n            .required()\r\n            .label(\"Genre\"),\r\n        numberInStock: Joi.number()\r\n            .required()\r\n            .min(0)\r\n            .max(100)\r\n            .label(\"Number in Stock\"),\r\n        dailyRentalRate: Joi.number()\r\n            .required()\r\n            .min(0)\r\n            .max(10)\r\n            .label(\"Daily Rental Rate\")\r\n    };\r\n\r\n    async componentDidMount() {\r\n        this.setState({loading: true})\r\n        await  this.populateGenres();\r\n        await  this.populateMovie();\r\n    }\r\n\r\n    mapToViewModel(movie) {\r\n        return {\r\n            _id: movie._id,\r\n            title: movie.title,\r\n            genreId: movie.genre._id,\r\n            numberInStock: movie.numberInStock,\r\n            dailyRentalRate: movie.dailyRentalRate\r\n        };\r\n    }\r\n\r\n    doSubmit = async () => {\r\n\r\n        this.props.history.push(\"/movies\");\r\n    };\r\n\r\n    render() {\r\n        return (\r\n                <React.Fragment>\r\n                     {this.state.loading && (\r\n                        <div class=\"spinner-grow text-dark\" role=\"status\">\r\n                            <span class=\"sr-only\">Loading...</span>\r\n                        </div>\r\n                    )}\r\n                    {!this.state.loading && (\r\n                        <div className=\"row\">\r\n                             <div className=\"col-md-8\">\r\n                                <h1>Movie Details</h1>\r\n                                <form>\r\n                                    {this.renderInput(\"title\", \"Title\", \"text\", true)}\r\n                                    {this.renderSelect(\"genreId\", \"Genre\", this.state.genres, true)}\r\n                                    {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\", true)}\r\n                                    {this.renderInput(\"dailyRentalRate\", \"Rate\", 'Text', true)}\r\n                                </form>\r\n                             </div>\r\n                             <div className=\"col-md-4\">\r\n                                <div className=\"card\" style={{width: '100%'}}>\r\n                                <img src={faker.internet.avatar()} className=\"card-img-top\" alt=\"...\"/>\r\n                                <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Title: {this.state.data.title}</h5>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    \r\n                </React.Fragment>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieDetail;\r\n","import React, {Component} from 'react';\r\nimport {ToastContainer} from \"react-toastify\";\r\nimport {Route, Redirect, Switch} from 'react-router-dom';\r\nimport Customers from './components/customers';\r\nimport Rentals from './components/rentals';\r\nimport MovieForm from './components/movieForm';\r\nimport Profile from './components/profile';\r\nimport CustomerForm from './components/customerForm';\r\nimport NotFound from './components/notFound';\r\nimport Movies from './components/movies';\r\nimport NavBar from './components/navBar';\r\nimport LoginForm from './components/loginForm';\r\nimport Logout from './components/logout';\r\nimport ProtectedRoute from \"./components/common/protectedRoute\";\r\nimport RegisterForm from './components/registerForm';\r\nimport MovieDetail from './components/MovieDetail';\r\nimport auth from './services/authService'\r\nimport './App.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n    state = {};\r\n\r\n    componentDidMount(){\r\n        const user = auth.getCurrentUser();\r\n        console.log(user);\r\n        this.setState({user})\r\n    }\r\n    render() {\r\n        const {user} = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <ToastContainer/>\r\n                 <NavBar user={user}/>\r\n                <main className=\"container\">\r\n                    <Switch>\r\n                        <Route path=\"/register\" component={RegisterForm}/>\r\n                        <Route path=\"/movie-detail/:id\" component={MovieDetail}/>\r\n                        <Route path=\"/login\" component={LoginForm}/>\r\n                        <Route path=\"/logout\" component={Logout}/>\r\n                        <ProtectedRoute\r\n                            path=\"/movies/:id\" component={MovieForm}\r\n                        />\r\n                        <ProtectedRoute\r\n                            path=\"/customers/:id\" component={CustomerForm}\r\n                        />\r\n                        <Route\r\n                            path=\"/movies\"\r\n                            render={props => <Movies {...props} user={this.state.user}/>}\r\n                        />\r\n                       <Route\r\n                            path=\"/customers\"\r\n                            render={props => <Customers {...props} user={this.state.user}/>}\r\n                        />\r\n                        <Route\r\n                            path=\"/profile\"\r\n                            render={props => <Profile {...props} user={this.state.user}/>}\r\n                        />\r\n                        <Route path=\"/rentals\" component={Rentals}/>\r\n                        <Route path=\"/not-found\" component={NotFound}/>\r\n                        <Redirect from=\"/\" exact to=\"/movies\"/>\r\n                        <Redirect to=\"/not-found\"/>\r\n                    </Switch>\r\n                </main>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}